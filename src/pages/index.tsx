import Head from "next/head";
import Image from "next/image";
import { GetServerSideProps } from "next";
import styles from "@/styles/Home.module.css";
import MySpaceCard from "@/components/layouts/MySpaceCard";
import InfoCard from "@/components/modules/info-cards";

import { data } from "../static";
import MySpacePage from "@/components/layouts/MySpacePage";
import useMediaQuery from "@/components/hooks/useMediaQuery";
import useIsLoaded from "@/components/hooks/useIsLoaded";
import InfoCardList from "@/components/layouts/MySpaceCardList";

/**
 * Need 'experience' query param to hide and show cards, change about hide media player and comments
 *
 * need experience route to scroll to experience
 * need resume route to download resume
 */

export default function Home(props: any) {
  const {
    overview,
    social,
    contact,
    about,
    education,
    associations,
    experience,
    contributions,
    projects,
  } = props;

  const isLoaded = useIsLoaded();
  const isDesktop = useMediaQuery("(min-width: 960px)", isLoaded);

  const sectionsDesktop = {
    type: "desktop",
    sections: [
      [overview, social, contact, about, education, associations],
      [/*mediaPlayer, posts*/ experience, contributions, projects],
    ],
  };

  const sectionsMobile = {
    type: "mobile",
    sections: [
      overview,
      /*mediaPlayer*/
      social,
      contact,
      /*posts,*/
      about,
      experience,
      contributions,
      projects,
      education,
      associations,
    ],
  };

  const sections = isDesktop ? sectionsDesktop : sectionsMobile;

  console.log("sections", sections);

  const createSectionList = (sections: any) => {
    console.log("@@sections==>", sections);
    return (
      <InfoCardList>
        {sections.map((section: any, index: number) => (
          // need to refactor to handle ids
          <InfoCard key={`section-${index}`} data={section} />
        ))}
      </InfoCardList>
    );
  };

  const renderSections = (sectionLists: any) => {
    if (sections.type === "desktop" && isDesktop) {
      return sectionLists.sections.map((infoCardsData: any[]) => {
        return createSectionList(infoCardsData);
      });
    } else if (sections.type === "mobile") {
      return createSectionList(sectionLists.sections);
    }
  };

  return (
    <>
      {/* @todo: move head into  */}
      <Head>
        <title>erockdotdev</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MySpacePage>
        <main className={styles.main}>
          {renderSections(sections)}
          {/* <InfoCardList>
            <InfoCard data={overview} />
            <InfoCard data={social} />
            <InfoCard data={contact} />
            <InfoCard data={about} />
            <InfoCard data={education} />
            <InfoCard data={associations} />
          </InfoCardList>
          <InfoCardList> */}
          {/* <MySpaceCard title="MediaPlayer">
              <div id="winamp-container"></div>
            </MySpaceCard> */}
          {/* <MySpaceCard title="Events"></MySpaceCard> */}
          {/* <MySpaceCard title="Posts">
              <p>Pined</p>
              <p>Recent</p>
              <p>See More</p>
            </MySpaceCard> */}
          {/* <InfoCard id="experience" data={experience} />
            <InfoCard id="contributions" data={contributions} />
            <InfoCard id="projects" data={projects} /> */}
          {/* <MySpaceCard title="Friends"></MySpaceCard>
          <MySpaceCard title="Comments"></MySpaceCard> */}
          {/* </InfoCardList> */}
        </main>
        <footer style={{ padding: "20px 0 45px 0" }}>
          <div style={{ position: "relative", height: "200px", width: "100%" }}>
            <Image
              src="/images/punch-the-monkey.gif"
              // 1400 × 428
              // width={1400}
              // height={428}
              layout="fill"
              objectFit="contain"
              alt="Punch the Monkey"
            />
          </div>
        </footer>
      </MySpacePage>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async context => {
  return {
    props: {
      overview: data.overview,
      social: data.social,
      contact: data.contact,
      about: data.about,
      education: data.education,
      associations: data.associations,
      experience: data.experience,
      contributions: data.contributions,
      projects: data.projects,
    },
  };
};
